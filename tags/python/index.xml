<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Dreambooker</title><link>https://zxdawn.github.io/tags/python/</link><description>Recent content in Python on Dreambooker</description><generator>Hugo -- gohugo.io</generator><language>zn-Hans</language><lastBuildDate>Wed, 02 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://zxdawn.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Integrated Reaction Rates (Part3)</title><link>https://zxdawn.github.io/2020/12/02/integrated-reaction-rates-part3/</link><pubDate>Wed, 02 Dec 2020 00:00:00 +0000</pubDate><guid>https://zxdawn.github.io/2020/12/02/integrated-reaction-rates-part3/</guid><description>Generate the yaml file of specific mechanism for PERMM</description></item><item><title>Integrated Reaction Rates (Part2)</title><link>https://zxdawn.github.io/2020/12/01/integrated-reaction-rates-part2/</link><pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate><guid>https://zxdawn.github.io/2020/12/01/integrated-reaction-rates-part2/</guid><description>Aplication of PERMM for WRF-Chem</description></item><item><title>Integrated Reaction Rates (Part1)</title><link>https://zxdawn.github.io/2020/11/30/integrated-reaction-rates-part1/</link><pubDate>Mon, 30 Nov 2020 00:00:00 +0000</pubDate><guid>https://zxdawn.github.io/2020/11/30/integrated-reaction-rates-part1/</guid><description>Useful tool: PERMM</description></item><item><title>Satpy中英双语简介</title><link>https://zxdawn.github.io/2020/02/24/satpy%E4%B8%AD%E8%8B%B1%E5%8F%8C%E8%AF%AD%E7%AE%80%E4%BB%8B/</link><pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate><guid>https://zxdawn.github.io/2020/02/24/satpy%E4%B8%AD%E8%8B%B1%E5%8F%8C%E8%AF%AD%E7%AE%80%E4%BB%8B/</guid><description>Satpy中英双语手册</description></item><item><title>Plot TROPOMI data using pcolormesh or imshow?</title><link>https://zxdawn.github.io/2020/02/22/plot-tropomi-data-using-pcolormesh-or-imshow/</link><pubDate>Sat, 22 Feb 2020 00:00:00 +0000</pubDate><guid>https://zxdawn.github.io/2020/02/22/plot-tropomi-data-using-pcolormesh-or-imshow/</guid><description>Methods to plot Swath data correctly</description></item><item><title>Satpy Basic (FY4A)</title><link>https://zxdawn.github.io/2020/02/06/satpy-basic-fy4a/</link><pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate><guid>https://zxdawn.github.io/2020/02/06/satpy-basic-fy4a/</guid><description>Using Satpy to read and plot FY4A data</description></item><item><title>Controlling the exam with Python</title><link>https://zxdawn.github.io/2018/11/22/controlling-the-exam-with-python/</link><pubDate>Thu, 22 Nov 2018 13:19:33 +0000</pubDate><guid>https://zxdawn.github.io/2018/11/22/controlling-the-exam-with-python/</guid><description>&lt;h2 id="predicaments">Predicaments&lt;/h2>
&lt;p>We&amp;rsquo;re asked to learn a library about safety.&lt;/p>
&lt;p>However, if the duration is greater than 5 minutes (~300 seconds), we need to click &lt;code>agree&lt;/code> to let the timing continue. So, when we finish the learning progress, we&amp;rsquo;ll click &lt;strong>6*60/5 = 72&lt;/strong> times &amp;hellip;&amp;hellip;..&lt;/p></description></item><item><title>Trick of binned_statistic_2d</title><link>https://zxdawn.github.io/2018/11/22/trick-of-binned_statistic_2d/</link><pubDate>Thu, 22 Nov 2018 09:11:07 +0000</pubDate><guid>https://zxdawn.github.io/2018/11/22/trick-of-binned_statistic_2d/</guid><description>&lt;h2 id="official-example">Official example&lt;/h2>
&lt;pre tabindex="0">&lt;code>&amp;gt;&amp;gt;&amp;gt; from scipy import stats
&lt;/code>&lt;/pre>&lt;p>Calculate the counts with explicit bin-edges:&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;gt;&amp;gt;&amp;gt; x = [0.1, 0.1, 0.1, 0.6]
&amp;gt;&amp;gt;&amp;gt; y = [2.1, 2.6, 2.1, 2.1]
&amp;gt;&amp;gt;&amp;gt; binx = [0.0, 0.5, 1.0]
&amp;gt;&amp;gt;&amp;gt; biny = [2.0, 2.5, 3.0]
&amp;gt;&amp;gt;&amp;gt; ret = stats.binned_statistic_2d(x, y, None, &amp;#39;count&amp;#39;, bins=[binx,biny])
&amp;gt;&amp;gt;&amp;gt; ret.statistic
array([[ 2., 1.],
[ 1., 0.]])
&lt;/code>&lt;/pre></description></item><item><title>Set up personal Anaconda mirror</title><link>https://zxdawn.github.io/2018/11/16/set-up-personal-anaconda-mirror/</link><pubDate>Fri, 16 Nov 2018 10:13:08 +0000</pubDate><guid>https://zxdawn.github.io/2018/11/16/set-up-personal-anaconda-mirror/</guid><description>&lt;h2 id="predicaments">Predicaments&lt;/h2>
&lt;p>If you encounter any problems as follows, you should try to set up a personal Python(Anaconda) mirror:&lt;/p>
&lt;ol>
&lt;li>Deploy a python environment on servers that have no access to the Internet;&lt;/li>
&lt;li>Deploy a python environment which can be used directly by other users on the server;&lt;/li>
&lt;li>Internet speed or connection to cloud mirror is slow.&lt;/li>
&lt;/ol>
&lt;h2 id="steps">Steps&lt;/h2>
&lt;h3 id="installation">Installation&lt;/h3>
&lt;p>Just install Anaconda according to this &lt;a href="https://conda.io/docs/user-guide/install/index.html">guide&lt;/a>.&lt;/p>
&lt;p>Of course, you can download Anaconda installer archive from &lt;a href="https://repo.continuum.io/pkgs/">here&lt;/a>.&lt;/p>
&lt;h3 id="downloadmirror">Download(mirror)&lt;/h3>
&lt;p>You can use &lt;code>wget&lt;/code> to mirror the packages from &lt;a href="https://repo.continuum.io/pkgs/">official Anaconda websites&lt;/a> or other mirror websites (&lt;a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/">TUNA&lt;/a> and &lt;a href="https://mirrors.ustc.edu.cn/anaconda">USTC&lt;/a>).&lt;/p>
&lt;p>If your server is located in China, I recommend the later one.&lt;/p>
&lt;p>I&amp;rsquo;ll take the later one as example.&lt;/p></description></item><item><title>Trick of pcolormesh</title><link>https://zxdawn.github.io/2018/10/31/trick-of-pcolormesh/</link><pubDate>Wed, 31 Oct 2018 10:40:24 +0000</pubDate><guid>https://zxdawn.github.io/2018/10/31/trick-of-pcolormesh/</guid><description>&lt;h2 id="reference">Reference&lt;/h2>
&lt;p>&lt;a href="http://alex.seeholzer.de/2014/05/fun-with-matplotlib-pcolormesh-getting-data-to-display-in-the-right-position/">http://alex.seeholzer.de/2014/05/fun-with-matplotlib-pcolormesh-getting-data-to-display-in-the-right-position/&lt;/a>&lt;/p>
&lt;h2 id="code">Code&lt;/h2></description></item></channel></rss>